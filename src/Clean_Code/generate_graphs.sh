#!/bin/bash

# Script to generate PyTorch Geometric graphs from embeddings
# This script processes embeddings generated by generate_gnn_embeddings.sh

# Default values
DATASET_NAME=""
EMBEDDINGS_DIR=""
BATCH_SIZE=10
WINDOW_SIZE=3
EDGE_TYPE="window"

# Function to display help message
show_help() {
    echo "Usage: $(basename $0) [options]"
    echo ""
    echo "Options:"
    echo "  --dataset_name NAME      Dataset name (e.g., sst2, ag_news) [required]"
    echo "  --embeddings_dir DIR     Directory containing embeddings [required]"
    echo "  --batch_size N           Batch size for graph processing (default: 10)"
    echo "  --window_size N          Window size for creating edges (default: 3)"
    echo "  --edge_type TYPE         Type of edges to create (window, fully_connected) (default: window)"
    echo "  --help                   Show this help message"
    echo ""
}

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        --dataset_name)
            DATASET_NAME="$2"
            shift
            shift
            ;;
        --embeddings_dir)
            EMBEDDINGS_DIR="$2"
            shift
            shift
            ;;
        --batch_size)
            BATCH_SIZE="$2"
            shift
            shift
            ;;
        --window_size)
            WINDOW_SIZE="$2"
            shift
            shift
            ;;
        --edge_type)
            EDGE_TYPE="$2"
            shift
            shift
            ;;
        --help)
            show_help
            exit 0
            ;;
        *)
            echo "Unknown option: $key"
            show_help
            exit 1
            ;;
    esac
done

# Check required arguments
if [ -z "$DATASET_NAME" ]; then
    echo "Error: dataset_name is required"
    exit 1
fi

if [ -z "$EMBEDDINGS_DIR" ]; then
    echo "Error: embeddings_dir is required"
    exit 1
fi

# Check if embeddings directory exists
if [ ! -d "$EMBEDDINGS_DIR" ]; then
    echo "Error: embeddings directory does not exist: $EMBEDDINGS_DIR"
    exit 1
fi

echo "Generating graphs for dataset: $DATASET_NAME"
echo "Embeddings directory: $EMBEDDINGS_DIR"
echo "Batch size: $BATCH_SIZE"
echo "Window size: $WINDOW_SIZE"
echo "Edge type: $EDGE_TYPE"

# Run graph processor
python -m src.Clean_Code.Graph_Generation.graph_data_processor \
    --dataset_name "$DATASET_NAME" \
    --embeddings_dir "$EMBEDDINGS_DIR" \
    --batch_size "$BATCH_SIZE" \
    --window_size "$WINDOW_SIZE" \
    --edge_type "$EDGE_TYPE"

# Check if graph generation was successful
if [ $? -eq 0 ]; then
    echo "Graph generation completed successfully"
else
    echo "Error: Graph generation failed"
    exit 1
fi

echo "Done!"
